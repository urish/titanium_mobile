---
name: Titanium.UI.Picker
description: A Picker is created by the method [Titanium.UI.createPicker](Titanium.UI.createPicker).  A Picker can be used to select one or more fixed values.
extends: Titanium.Proxy
since: "0.8"
methods:
  - name: add
    description: add an array of rows, a single row or a column to the picker
    parameters:
      - name: data
        description: add an array of rows, a single row or a column to the picker
        type: [Array<Titanium.UI.PickerRow>, Titanium.UI.PickerColumn, Titanium.UI.PickerRow]
  - name: getSelectedRow
    description: get the selected row object for column
    returns:
        type: Object
    parameters:
      - name: index
        description: for the column index, return the row object or nil if not found
        type: Number
  - name: reloadColumn
    description: causes the picker to reload the values from the new column.
    parameters:
      - name: column
        description: new column to load
        type: Object
  - name: setSelectedRow
    description: set the column's row to the selected state
    parameters:
      - name: column
        description: the column index
        type: Number
      - name: row
        description: the row index
        type: Number
      - name: animated
        description: boolean to indicate if the selection should be animated (default) (optional)
        type: Boolean
events:
  - name: change
    description: fired when the value of a picker row and/or column changes
    properties:
      - name: columnIndex
        description: the selected column index
        type: Number
      - name: rowIndex
        description: the selected row index
        type: Number
      - name: column
        description: the column object
        type: Titanium.UI.PickerColumn
      - name: value
        description: (date/time pickers only) the selected date/time value.
        type: Date
      - name: row
        description: the row object
        type: Titanium.UI.PickerRow
      - name: selectedValue
        description: (plain picker only) the array of selected values, one element per column in the picker.
        type: Array<Object>
properties:
  - name: columns
    description: array of column values
    type: Array<Object>
  - name: countDownDuration
    description: the duration value in milliseconds for count down timer pickers. (Note that Titanium's Android implementation does not support the countdown timer.)
    type: Number
  - name: format24
    description: (Android only, applicable only to the <Titanium.UI.PICKER_TYPE_TIME> picker.)  If true, a 24-hour cloc will be used, with hours 0 through 23.  If false, a 12-hour clock will be used, with hours 1 through 12 and am/pm controls.  For reasons of backward compatibility, the default value depends on the type of time picker being used.  For the native time picker (when "useSpinner" is either un-set or false), the default is false.  For the spinner-style time picker, the default is true.
    type: Boolean
  - name: locale
    description: the locale used for displaying Date/Time pickers values
    type: String
  - name: minDate
    description: the minimum Date/Time for value for date pickers
    type: Date
  - name: minuteInterval
    description: property to set the interval displayed by the minutes wheel (for example, 15 minutes). The interval value must be evenly divided into 60; if it is not, the default value is used. The default and minimum values are 1; the maximum value is 30.  (Not currently supported on Android.)
    type: Number
  - name: selectionIndicator
    description: for basic picker, boolean value to indicate whether the visual selection style is shown. On the iPhone, this is a blue selected bar.
    type: Boolean
  - name: type
    description: the type constant for the picker. One of <Titanium.UI.PICKER_TYPE_PLAIN> (default), <Titanium.UI.PICKER_TYPE_DATE_AND_TIME>, <Titanium.UI.PICKER_TYPE_DATE>, <Titanium.UI.PICKER_TYPE_TIME> or <Titanium.UI.PICKER_TYPE_COUNT_DOWN_TIMER>. (Note that Titanium's Android implementation does not support the countdown timer or date+time varieties.)
    type: Number
  - name: useSpinner
    description: (Android only, default false.) An indicator that you wish to use a non-native Android control that looks and behaves more like the iOS picker in the sense that the user selects values by spinning a wheel.  (The native Android spinner is more like a conventional "dropdown".)  Note that this option works both plain pickers, date pickers and time pickers.  Set it preferably immediately when creating the picker, i.e., <Titanium.UI.createPicker({useSpinner:true});>, but definitely before `.add()`ing the picker to its parent.
    type: Boolean
    default: false
    platforms: [android]
  - name: value
    description: the Date/Time value for date pickers
    type: Date
  - name: visibleItems
    description: |
        (Android only.)  This is relevant only if you set `useSpinner` to `true`, and it is relevant only for the plain picker (not date/time).  By default, the spinner-style Android picker will show 5 rows: the one in the middle which is selected, and then 2 above and below.  You can set this to allow more (use an odd number to be sure the selected row is in the middle.)
    type: Number
notes: |
    For Android, note the `useSpinner` property above.  By default, when you create a picker you will get Android's native picker control, which looks more like the classic "dropdown" widget.  If you'd prefer to use something that looks more like iOS's picker -- which looks like one or more spinning wheels --, you can set `useSpinner: true`.
    
    Titanium's Android picker control (both the native and the `useSpinner` variety) does not support/display views that are added to picker rows.  Only the `title` of the row will be displayed within the control.
    Titanium for Android does not support the DateTime or Count Down Timer picker type.
examples:
  - title: Basic Single Column Picker
    example: |
        In this basic picker example, we create a one column picker with 4 rows. 
        
            var picker = Titanium.UI.createPicker();
            var data = [];
            data[0]=Titanium.UI.createPickerRow({title:'Bananas'});
            data[1]=Titanium.UI.createPickerRow({title:'Strawberries'});
            data[2]=Titanium.UI.createPickerRow({title:'Mangos'});
            data[3]=Titanium.UI.createPickerRow({title:'Grapes'});
            picker.add(data);
        
        
  - title: Custom View for Row
    example: |
        In this example, we use a custom label for each row in a column.
        
            var picker = Titanium.UI.createPicker();
            var row = Titanium.UI.createPickerRow();
            var label = Titanium.UI.createLabel({
            	text:text,
            	font:{fontSize:24,fontWeight:'bold'},
            	color:text,
            	width:'auto',
            	height:'auto'
            });
            row.add(label);
            picker.add(row);
        
        