---
name: Titanium.UI.TableView
description: A Table View allows you to create a scrollable table of content in a list-based fashion. The Table View is created by the method <Titanium.UI.createTableView>.
extends: Titanium.UI.View
since: "0.8"
methods:
  - name: appendRow
    description: append a row to the table, optionally with animation
    parameters:
      - name: row
        description: row to append
        type: Object
      - name: properties
        description: animation properties
        type: Object
  - name: deleteRow
    description: delete an existing row, optionally with animation
    parameters:
      - name: row
        description: index of row to delete
        type: Number
      - name: properties
        description: animation properties
        type: Object
  - name: deselectRow
    description: programmatically deselect a row
    parameters:
      - name: row
        description: row index to deselect
        type: Number
  - name: insertRowAfter
    description: insert a row before another row, optionally with animation
    parameters:
      - name: index
        description: index
        type: Number
      - name: row
        description: row to insert
        type: Object
      - name: properties
        description: animation properties
        type: Object
  - name: insertRowBefore
    description: insert a row after another row, optionally with animation
    parameters:
      - name: index
        description: index
        type: Number
      - name: row
        description: row to insert
        type: Object
      - name: properties
        description: animation properties
        type: Object
  - name: scrollToIndex
    description: scroll to a specific row index and ensure that that row is on screen
    parameters:
      - name: index
        description: index
        type: Number
      - name: properties
        description: animation properties. `position` property controls the position constant to use for position (on iPhone, use constants from Titanium.UI.iPhone.TableViewScrollPosition).
        type: Object
  - name: scrollToTop
    description: scroll the table to a specific top position where 0 is the topmost y position in the table view
    parameters:
      - name: top
        description: y position
        type: Number
      - name: properties
        description: optional dictionary with the key `animated` (default, true) as boolean to indicate if the scroll should be animated or immediate
        type: Object
  - name: selectRow
    description: programmatically select a row
    parameters:
      - name: row
        description: row index to select
        type: Number
  - name: setData
    description: set the data in the table, optionally with animation
    parameters:
      - name: data
        description: data array of rows either as objects or row objects
        type: Array<Object>
      - name: properties
        description: animation properties
        type: Object
  - name: updateRow
    description: update an existing row, optionally with animation
    parameters:
      - name: row
        description: row data to update
        type: Object
      - name: properties
        description: animation properties
        type: Object
events:
  - name: delete
    description: fired when a table row is delete by the user
    properties:
      - name: index
        description: table view row index
        type: Number
      - name: section
        description: table view section object
        type: Titanium.UI.TableViewSection
      - name: detail
        description: boolean to indicate if the right area was clicked
        type: Boolean
      - name: searchMode
        description: boolean to indicate if the table is in search mode
        type: Boolean
      - name: source
        description: the source object that fired the event
      - name: rowData
        description: table view row data object
      - name: y
        description: the y point of the event, in receiving view coordinates
      - name: x
        description: the x point of the event in receiving view coordiantes
      - name: type
        description: the name of the event fired
      - name: globalPoint
        description: a dictionary with properties x and y describing the point of the event in screen coordinates
      - name: row
        description: table view row object
        type: Titanium.UI.TableViewRow
  - name: longclick
    description: fired when the device detects that a table view row has been clicked and held (i.e., pressed
        without lifting the finger or trackpad).
    platforms: [android]
    properties:
      - name: index
        description: table view row index
        type: Number
      - name: section
        description: table view section object
        type: Titanium.UI.TableViewSection
      - name: source
        description: The source object that fired the event.
        type: Object
      - name: rowData
        description: table view row data object
        type: Object
      - name: row
        description: table view row that was longclicked.
        type: Titanium.UI.TableViewRow
      - name: type
        description: the name of the event fired
        type: String
  - name: move
    description: fired when a table row is moved by the user
    properties:
      - name: index
        description: table view row index
        type: Number
      - name: section
        description: table view section object
        type: Titanium.UI.TableViewSection
      - name: detail
        description: boolean to indicate if the right area was clicked
        type: Boolean
      - name: searchMode
        description: boolean to indicate if the table is in search mode
        type: Boolean
      - name: source
        description: the source object that fired the event
      - name: rowData
        description: table view row data object
      - name: y
        description: the y point of the event, in receiving view coordinates
      - name: x
        description: the x point of the event in receiving view coordiantes
      - name: type
        description: the name of the event fired
      - name: globalPoint
        description: a dictionary with properties x and y describing the point of the event in screen coordinates
      - name: row
        description: table view row object
        type: Titanium.UI.TableViewRow
  - name: scroll
    description: fired when the table view is scrolled
    properties:
      - name: firstVisibleItem
        description: the row index of the topmost visible row in the view (Android only)
        platforms: [android]
        type: Number
      - name: visibleItemCount
        description: the number of rows currently visible in the view (Android only)
        platforms: [android]
        type: Number
      - name: source
        description: the source object that fired the event
      - name: contentOffset
        description: dictionary with `x` and `y` properties containing the content offset (iOS only)
        platforms: [iphone, ipad]
      - name: totalItemCount
        description: the total number of rows in the view (Android only)
        platforms: [android]
        type: Number
      - name: y
        description: the y point of the event, in receiving view coordinates
      - name: x
        description: the x point of the event in receiving view coordiantes
      - name: contentSize
        description: dictionary with `width` and `height` properties containing the size of the content (regardless of the display size in the case of scrolling) (iOS only)
        platforms: [iphone, ipad]
      - name: type
        description: the name of the event fired
      - name: globalPoint
        description: a dictionary with properties x and y describing the point of the event in screen coordinates
      - name: size
        description: dictionary with `width` and `height` properties containing the size of the visible table view
  - name: scrollEnd
    description: fired when the table view stops scrolling
    properties:
      - name: source
        description: the source object that fired the event
      - name: contentOffset
        description: dictionary with `x` and `y` properties containing the content offset (iOS only)
        platforms: [iphone, ipad]
      - name: y
        description: the y point of the event, in receiving view coordinates
      - name: x
        description: the x point of the event in receiving view coordiantes
      - name: contentSize
        description: dictionary with `width` and `height` properties containing the size of the content (regardless of the display size in the case of scrolling) (iOS only)
        platforms: [iphone, ipad]
      - name: type
        description: the name of the event fired
      - name: globalPoint
        description: a dictionary with properties x and y describing the point of the event in screen coordinates
      - name: size
        description: dictionary with `width` and `height` properties containing the size of the visible table view
properties:
  - name: allowsSelection
    description: true if the rows can be selected
    type: Boolean
  - name: allowsSelectionDuringEditing
    description: true if the rows can be selected while editing the table (iOS Only)
    platforms: [iphone, ipad]
    type: Boolean
  - name: data
    description: the data array of objects to be used for the rows of the table view
    type: Array<Object>
  - name: editable
    description: allow the table view to be editable (this must be true for swipe-to-delete) (iOS Only)
    platforms: [iphone, ipad]
    type: Boolean
  - name: editing
    description: boolean to control the editing state of the table view (iOS Only)
    platforms: [iphone, ipad]
    type: Boolean
  - name: filterAttribute
    description: the filter attribute to be used when searching. this property maps to your data object or a property on the row object
    type: String
  - name: filterCaseInsensitive
    description: boolean to indicate if the search should be case sensitive or case insensitive (default)
    default: true
    type: Boolean
  - name: footerTitle
    description: the table view footer title
    type: String
  - name: footerView
    description: the table view footer as a view that will be rendered instead of a label
    type: Object
  - name: headerTitle
    description: the table view header title
    type: String
  - name: headerView
    description: the table view header as a view that will be rendered instead of a label
    type: Object
  - name: index
    description: an array of objects (with title and index properties) to control the table view index
    type: Array<Object>
  - name: maxRowHeight
    description: max row height for table view rows
    type: Number
  - name: minRowHeight
    description: min row height for table view rows
    type: Number
  - name: moving
    description: boolean to control the moveable state of the table view (iOS Only)
    platforms: [iphone, ipad]
    type: Boolean
  - name: rowHeight
    description: default row height for table view rows
    type: Number
  - name: scrollable
    description: true (default) if tableview can be scrolled
    type: Boolean
  - name: search
    description: the search field to use for the table view
    type: Object
  - name: searchHidden
    description: boolean to control the visibility of the search field
    type: Boolean
  - name: separatorColor
    description: the separator color color as a hex or named value
    type: String
  - name: separatorStyle
    description: the separator style constant. For iPhone, Titanium.UI.iPhone.TableViewSeparatorStyle
    type: Number
  - name: showVerticalScrollIndicator
    description: whether tableview displays vertical scroll indicator (iOS Only)
    platforms: [iphone, ipad]
    default: true
    type: Boolean
  - name: style
    description: iPhone only. the style of the table view. constant from <Titanium.UI.iPhone.TableViewStyle>
    platforms: [iphone, ipad]
    type: Number
examples:
  - title: Simple Table View with basic rows
    example: |
        The most basic example of a table view.
        
            var data = [{title:"Row 1"},{title:"Row 2"}];
            var table = Titanium.UI.createTableView({data:data});
            win.add(table);
        
        
