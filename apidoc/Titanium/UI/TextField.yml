---
name: Titanium.UI.TextField
description: A Text Area is created by the method <Titanium.UI.createTextField>. The Text Field is a single line field.
extends: Titanium.UI.View
since: "0.8"
methods:
  - name: blur
    description: force the field to lose focus
  - name: focus
    description: force the field to gain focus
  - name: hasText
    description: return boolean (true) if the field has text
events:
  - name: blur
    description: fired when the field loses focus
    properties:
      - name: value
        description: the value of the field upon blur
        type: String
      - name: y
        description: the y point of the event, in receiving view coordinates
      - name: x
        description: the x point of the event in receiving view coordiantes
      - name: globalPoint
        description: a dictionary with properties x and y describing the point of the event in screen coordinates
        platforms: [iphone, ipad]
        deprecated:
            since: "1.8.0"
  - name: change
    description: fired when the field value changes
    properties:
      - name: value
        description: the value of the field upon change
        type: String
      - name: y
        description: the y point of the event, in receiving view coordinates
      - name: x
        description: the x point of the event in receiving view coordiantes
      - name: globalPoint
        description: a dictionary with properties x and y describing the point of the event in screen coordinates
        platforms: [iphone, ipad]
        deprecated:
            since: "1.8.0"
  - name: focus
    description: fired when the field gains focus
    properties:
      - name: value
        description: the value of the field upon focus
        type: String
      - name: y
        description: the y point of the event, in receiving view coordinates
      - name: x
        description: the x point of the event in receiving view coordiantes
      - name: globalPoint
        description: a dictionary with properties x and y describing the point of the event in screen coordinates
        platforms: [iphone, ipad]
        deprecated:
            since: "1.8.0"
  - name: return
    description: fired when the field return key is pressed on the keyboard
    properties:
      - name: y
        description: the y point of the event, in receiving view coordinates
      - name: globalPoint
        description: a dictionary with properties x and y describing the point of the event in screen coordinates
        platforms: [iphone, ipad]
        deprecated:
            since: "1.8.0"
      - name: x
        description: the x point of the event in receiving view coordiantes
properties:
  - name: autocapitalization
    description: One of <Titanium.UI.TEXT_AUTOCAPITALIZATION_NONE>, <Titanium.UI.TEXT_AUTOCAPITALIZATION_WORDS>, <Titanium.UI.TEXT_AUTOCAPITALIZATION_SENTENCES>, or <Titanium.UI.TEXT_AUTOCAPITALIZATION_ALL> to indicate how the field should be capitalized during typing.
    type: Number
  - name: borderStyle
    description: the border style constant for the field
    type: Number
  - name: clearButtonMode
    description: the mode constant for how to handle displaying the clear button
    type: Number
  - name: clearOnEdit
    description: boolean that indicates if the value of the field is cleared upon editing
    type: Boolean
  - name: editable
    description: boolean indicating if the field is editable
    type: Boolean
  - name: enabled
    description: boolean indicating the enabled state of the field
    type: Boolean
  - name: hintText
    description: the hint text to display when the field is unfocused
    type: String
  - name: keyboardToolbar
    description: array of toolbar button objects to be used when the keyboard is displayed
    type: Array<Object>
  - name: keyboardToolbarColor
    description: the color of the keyboard toolbar
    type: String
  - name: keyboardToolbarHeight
    description: the height of the keyboard toolbar
    type: Number
  - name: leftButton
    description: the left button view
    type: Object
  - name: leftButtonMode
    description: the mode of the left button view
    type: Number
  - name: leftButtonPadding
    description: the left padding of the space between the button and the edge of the field
    type: Number
  - name: minimumFontSize
    description: the minimum size of the font when the font is sized based on the contents.  Enables font scaling to fit
    type: Number
  - name: paddingLeft
    description: the left padding of the text field
    type: Number
  - name: paddingRight
    description: the right padding of the text field
    type: Number
  - name: rightButton
    description: the right button view
    type: Object
  - name: rightButtonMode
    description: the mode of the right button view
    type: Number
  - name: rightButtonPadding
    description: the right padding of the space between the button and the edge of the field
    type: Number
  - name: suppressReturn
    description: boolean to indicate if the return key should be suppressed during entry
    type: Boolean
  - name: value
    description: value of the field
    type: String
  - name: verticalAlign
    description: the constant or string value for the fields vertical alignment.
    type: [Number,String]
notes: |
    On iPhone, the borderStyle can be set with a constant from [Titanium.UI](Titanium.UI).
    
    Both Text Areas and Text Fields can control the buttons displayed in a button bar above the keyboard when it's visible.
    
    Example using a custom keyboard toolbar:
    
        var textfield = Titanium.UI.createTextField({
        	color:'#336699',
        	value:'Focus to see keyboard w/ toolbar',
        	height:35,
        	width:300,
        	top:10,
        	borderStyle:Titanium.UI.INPUT_BORDERSTYLE_ROUNDED,
        	keyboardToolbar:[flexSpace,camera, flexSpace,tf,flexSpace, send,flexSpace],
        	keyboardToolbarColor: '#999',	
        	keyboardToolbarHeight: 40,
        });
examples:
  - title: Basic Text Field with rounded border
    example: |
        
        Create a simple text field with a round border style.
        
            var tf1 = Titanium.UI.createTextField({
            	color:'#336699',
            	height:35,
            	top:10,
            	left:10,
            	width:250,
            	borderStyle:Titanium.UI.INPUT_BORDERSTYLE_ROUNDED
            });
        
        
